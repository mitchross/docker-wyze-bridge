ARG ARM
ARG BUILD
ARG ARCH=${ARM:+arm32v7}

FROM ${ARCH:-amd64}/python:3.11-bullseye as base

# enable non-free repo
RUN sed -i -e's/ main/ main contrib non-free/g' /etc/apt/sources.list


RUN echo 'deb http://deb.debian.org/debian testing main non-free' > /etc/apt/sources.list.d/debian-testing.list \
    && apt-get -qq update


# Install Intel Quick Sync drivers and libraries
RUN apt-get update \
    && apt-get install -y libmfx-dev libva-dev libdrm-dev libva-drm2 intel-gpu-tools

RUN apt-get -qq install --no-install-recommends --no-install-suggests -y \
        intel-opencl-icd \
        mesa-va-drivers libva-drm2 intel-media-va-driver-non-free i965-va-driver libmfx1 radeontop intel-gpu-tools

RUN     rm -f /etc/apt/sources.list.d/debian-testing.list

FROM base as builder
ARG ARM
ARG LIB_ARCH=${ARM:+arm}
ARG MTX_ARCH=${ARM:+armv7}
ARG FFMPEG_ARCH=${ARM:+armv7l}
RUN apt-get update && \
    apt-get install -y curl gcc tar xz-utils && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*
COPY requirements.txt /tmp/requirements.txt
RUN pip3 install --disable-pip-version-check --prefix=/build/usr/local -r /tmp/requirements.txt
COPY *.lib /tmp/lib/
COPY . /build/app/
RUN mkdir -p /build/tokens /build/img && \
    . /build/app/.env && \
    curl -L https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-linux64-gpl.tar.xz \
    | tar --strip-components=1 -C /build/usr/local -Jxf - --wildcards '*ffmpeg' && \
    curl -L https://github.com/bluenviron/mediamtx/releases/download/v${MTX_TAG}/mediamtx_v${MTX_TAG}_linux_${MTX_ARCH:-amd64}.tar.gz \
    | tar xzf - -C /build/app && \
    cp /tmp/lib/${LIB_ARCH:-amd}.lib /build/usr/local/lib/libIOTCAPIs_ALL.so && \
    rm -rf /tmp/*

FROM base
ARG BUILD
COPY --from=builder /build /
ENV PYTHONUNBUFFERED=1 FLASK_APP=frontend BUILD=$BUILD
WORKDIR /app
CMD [ "flask", "run", "--host=0.0.0.0"]